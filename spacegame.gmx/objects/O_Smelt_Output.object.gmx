<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Inv_Slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>O_Smelt_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = global.controller;
free_space = Sc_Inventory_space(controller.smelt_type);
if (keyboard_check(vk_shift) &amp;&amp; free_space != 0)
{
    if(round(controller.input_num/2 + 0.1) &lt;= free_space)
    {
        controller.Inventory[controller.smelt_type] += round(controller.smelt_num/2 + 0.1);
        controller.smelt_num -= round(controller.smelt_num/2 + 0.1);
    }
    else
    {
        controller.Inventory[controller.smelt_type] += free_space;
        controller.smelt_num -= free_space;
    }
    Sc_Inventory_Assign();
}
else if (!keyboard_check(vk_shift) &amp;&amp; (controller.smelt_type &gt;= 0 &amp;&amp; (controller.mouse_type == -1 || controller.mouse_type == controller.smelt_type)))
{
    controller.mouse_slot += round(controller.smelt_num/2 + 0.1);
    controller.mouse_type = controller.smelt_type;
    controller.smelt_num -= round(controller.smelt_num/2 + 0.1);
}
if (controller.smelt_num == 0)
{
    controller.smelt_type = -1;
}
if (controller.input_num == 0)
{
    smelt_type = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = global.controller;
free_space = Sc_Inventory_space(controller.smelt_type);
if (keyboard_check(vk_shift) &amp;&amp; free_space != 0)
{
    if(controller.smelt_num &lt;= free_space)
    {
        controller.Inventory[controller.smelt_type] += controller.smelt_num;
        controller.smelt_num = 0;
        controller.smelt_type = -1;
    }
    else
    {
        controller.Inventory[controller.smelt_type] += free_space;
        controller.smelt_num -= free_space;
    }
    Sc_Inventory_Assign();
}
else if (!keyboard_check(vk_shift) &amp;&amp; (controller.smelt_type &gt;= 0 &amp;&amp; (controller.mouse_type == -1 || controller.mouse_type == controller.smelt_type)))
{
    controller.mouse_slot += controller.smelt_num;
    controller.mouse_type = controller.smelt_type;
    controller.smelt_num = 0;
    controller.smelt_type = -1;
}
if (controller.input_num == 0)
{
    smelt_type = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = global.controller;
draw_sprite(Sp_Inv_Slot, image_index, x, y);
dist = O_Smelt_Output.x - O_Smelt_Input.x;
width = 100;
if (controller.smelting)
{
    draw_set_color(c_red);
    percent_complete = ((controller.processed_time/room_speed)/(global.smelt_time[controller.in_type]))*100;
    draw_rectangle(x - dist/2 - width/2, y - 5, x - dist/2 - width/2 + percent_complete, y + 5, false);
}
else
{
    time = 0;
}
draw_set_color(c_black);
draw_rectangle(x - dist/2 - width/2, y - 5, x - dist/2 + width/2, y + 5, true);
if (controller.smelt_num &gt; 0)
{
    draw_set_color(inventory_text_color);
    draw_text(x - 26, y - 26, controller.smelt_num);
}
switch (controller.smelt_type)
{
    case -1:
        break;
    case 0 + total_resource_types:
        draw_sprite(Sp_Refined_Copper, 0, x, y);
        item_name = "Refined Copper";
        break;
    case 1 + total_resource_types:
        draw_sprite(Sp_Refined_Iron, 0, x, y);
        item_name = "Refined Iron";
        break;
    case 2 + total_resource_types:
        draw_sprite(Sp_Refined_Nickel, 0, x, y);
        item_name = "Refined Nickel";
        break;
    case 3 + total_resource_types:
        draw_sprite(Sp_Refined_Stone, 0, x, y);
        item_name = "Refined Stone";
        break;
    case 4 + total_resource_types:
        draw_sprite(Sp_Refined_Ice, 0, x, y);
        item_name = "Water";
        break;
    case 5 + total_resource_types:
        draw_sprite(Sp_Refined_Gold, 0, x, y);
        item_name = "Refined Gold";
        break;
    case 6 + total_resource_types:
        draw_sprite(Sp_Refined_Platinum, 0, x, y);
        item_name = "Refined Platinum";
        break;
    case 7 + total_resource_types:
        draw_sprite(Sp_Refined_Titanium, 0, x, y);
        item_name = "Refined Titanium";
        break;
}
if (controller.smelt_type &gt;= 0 &amp;&amp; draw_item_name)
{
    draw_text(mouse_x + 16, mouse_y + 16, string(item_name));
}
if (global.debug)
{
    draw_set_color(c_red);
    draw_text(x - 26, y - 26, 
        "S: " + "Output" +
        "#T: " + string(controller.smelt_type) +
        "#N: " + string(controller.smelt_num));
    draw_set_color(c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Planet_Water</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>O_Planet_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
inner_radius = 2000;
outer_radius = 4000;
min_create = 10;
max_create = 15;
mass = mass_Moon;
num_asteroids = 0;
num_comets = 0;

event_inherited();

// Setup Player orbital velocity
angle_object = point_direction(x, y, O_Ship.x, O_Ship.y);
with(O_Gravity)
{
    motion_add(other.angle_object + 90, other.ship_orbitalV);
}
with(O_Tutorial_Target)
{
    motion_add(other.angle_object + 90, other.ship_orbitalV);
}
with(O_Parallax)
{
    motion_add(other.angle_object + 90, other.ship_orbitalV);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player gravity
event_inherited();
if(instance_exists(O_Ship))
{
    angle_object = point_direction(x, y, O_Ship.x, O_Ship.y);
    with(O_Gravity)
    {
        motion_add(other.angle_object, other.ship_gravity);
    }
    with(O_Tutorial_Target)
    {
        motion_add(other.angle_object, other.ship_gravity);
    }
    with(O_Parallax)
    {
        motion_add(other.angle_object, other.ship_gravity);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Ship">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = point_direction(x, y, O_Ship.x, O_Ship.y)+180;
motion_add(dir, 1.1*O_Parallax.speed);
with(O_Tutorial_Target)
{
    motion_add(other.dir, 1.1*O_Parallax.speed);
}
with(O_Parallax)
{
    motion_add(other.dir, 1.1*speed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

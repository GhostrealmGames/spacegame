<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_x = view_xview[0] + 15;
_y = view_yview[0] + 15;
_w = sprite_get_width(Sp_Phone_Button_Pause);
_h = sprite_get_height(Sp_Phone_Button_Pause);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_x &gt; _x &amp;&amp; mouse_x &lt; _x + _w &amp;&amp; mouse_y &gt; _y &amp;&amp; mouse_y &lt; _y + _h)
{
    if (room == R_Main)
    {
        screen_save("Pause.png");
        global.B_Pause = background_add("Pause.png", false, true)
        room_set_background(R_Menu_Pause, 2, true, false, global.B_Pause, 0, 0, false, false, 0, 0, 1);
        cursor_sprite = Sp_Cursor;
        room_goto(R_Menu_Pause);
    }
    else if(room == R_Tutorial)
    {
        screen_save("Pause.png");
        global.B_Pause = background_add("Pause.png", false, true)
        room_set_background(R_Tutorial_Pause, 1, true, false, global.B_Pause, 0, 0, false, false, 0, 0, 1);
        cursor_sprite = Sp_Cursor;
        room_goto(R_Tutorial_Pause);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor_sprite = Sp_Empty;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.5);
draw_sprite(Sp_Phone_Button_Pause, 0,_x, _y);
//draw_set_color(make_color_rgb(220, 220, 220));
//draw_rectangle(_x, _y, _x + _w, _y + _h, false);
//draw_set_color(make_color_rgb(192,192,192));
//draw_rectangle(_x + _w - _w/4 + 5, _y + _h/5, _x + _w - _w /3, _y + 4*_h/5, false);
//draw_rectangle(_x + _w/4 - 5, _y + _h/5, _x + _w /3, _y + 4*_h/5, false);
if(global.debug)
{
    draw_set_alpha(1);
    draw_set_color(c_red);
    // Top
    if(mouse_y &gt; _y)
    {
        draw_set_color(c_lime);
    }
    else
    {
        draw_set_color(c_red);
    }
    draw_line(_x, _y, _x + _w, _y);
    // Left
    if(mouse_x &gt; _x)
    {
        draw_set_color(c_lime);
    }
    else
    {
        draw_set_color(c_red);
    }
    draw_line(_x, _y, _x, _y + _h);
    // Right
    if(mouse_x &lt; _x + _w)
    {
        draw_set_color(c_lime);
    }
    else
    {
        draw_set_color(c_red);
    }
    draw_line(_x + _w, _y, _x + _w, _y + _h);
    // Bottom
    if(mouse_y &lt; _y + _h)
    {
        draw_set_color(c_lime);
    }
    else
    {
        draw_set_color(c_red);
    }
    draw_line(_x, _y + _h, _x + _w, _y + _h);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

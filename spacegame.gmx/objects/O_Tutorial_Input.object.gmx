<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Inv_Slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>O_Smelt_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.mouse_type &gt;= 0 &amp;&amp; global.mouse_type &lt; total_resource_types &amp;&amp; (O_Tutorial.in_type == global.mouse_type || O_Tutorial.in_type == -1))
{
    if (global.mouse_type == (O_Tutorial.smelt_type - total_resource_types) || O_Tutorial.smelt_type == -1)
    {
        O_Tutorial.input_num += 1;
        O_Tutorial.in_type = global.mouse_type;
        global.mouse_slot -= 1;
        if (global.mouse_slot == 0)
        {
            global.mouse_type = -1;
        }
    }
}
else
{
    if (O_Tutorial.in_type &gt;= 0)
    {
        free_space = Sc_Inventory_space(O_Tutorial.in_type);
        if (keyboard_check(vk_shift) &amp;&amp; free_space != 0)
        {
            if(round(O_Tutorial.input_num/2 + 0.1) &lt;= free_space)
            {
                global.Inventory[O_Tutorial.in_type] += round(O_Tutorial.input_num/2 + 0.1);
                O_Tutorial.input_num -= round(O_Tutorial.input_num/2 + 0.1);
            }
            else
            {
                global.Inventory[O_Tutorial.in_type] += free_space;
                O_Tutorial.input_num -= free_space;
            }
            Sc_Inventory_Assign();
        }
        else if (!keyboard_check(vk_shift) &amp;&amp; (global.mouse_type == -1 || O_Tutorial.in_type == global.mouse_type))
        {
            if (O_Tutorial.input_num &gt;= 50)
            {
                global.mouse_slot = 25 + global.mouse_slot;
                global.mouse_type = O_Tutorial.in_type;
                O_Tutorial.input_num -= 25;
            }
            else
            {
                global.mouse_slot = round(O_Tutorial.input_num/2 + 0.1);
                global.mouse_type = O_Tutorial.in_type;
                O_Tutorial.input_num -= round(O_Tutorial.input_num/2 + 0.1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (O_Tutorial.mouse_type &gt;= 0 &amp;&amp; O_Tutorial.mouse_type &lt; total_resource_types &amp;&amp; (O_Tutorial.in_type == -1 || O_Tutorial.in_type == O_Tutorial.mouse_type))
{
    if ((O_Tutorial.mouse_type == (O_Tutorial.smelt_type - total_resource_types) &amp;&amp; O_Tutorial.mouse_type == O_Tutorial.in_type) || (O_Tutorial.smelt_type == -1 &amp;&amp; O_Tutorial.in_type == -1))
    {
        O_Tutorial.input_num += O_Tutorial.mouse_slot;
        O_Tutorial.in_type = O_Tutorial.mouse_type;
        O_Tutorial.mouse_slot = 0;
        O_Tutorial.mouse_type = -1;
    }
}
else
{
    free_space = Sc_Inventory_space(O_Tutorial.in_type);
    if (keyboard_check(vk_shift) &amp;&amp; O_Tutorial.in_type &gt;= 0 &amp;&amp; free_space != 0)
    {
        if(O_Tutorial.input_num &lt;= free_space)
        {
            O_Tutorial.Inventory[O_Tutorial.in_type] += O_Tutorial.input_num;
            O_Tutorial.input_num = 0;
            O_Tutorial.in_type = -1;
        }
        else
        {
            O_Tutorial.Inventory[O_Tutorial.in_type] += free_space;
            O_Tutorial.input_num -= free_space;
        }
        Sc_Inventory_Assign();
    }
    else if (!keyboard_check(vk_shift) &amp;&amp; (O_Tutorial.mouse_type == -1 || O_Tutorial.in_type == O_Tutorial.mouse_type))
    {
        if (O_Tutorial.input_num &gt;= 50)
        {
            O_Tutorial.mouse_slot = 50 + O_Tutorial.mouse_slot;
            O_Tutorial.mouse_type = O_Tutorial.in_type;
            O_Tutorial.input_num -= 50;
        }
        else
        {
            O_Tutorial.mouse_slot = O_Tutorial.input_num + O_Tutorial.mouse_slot;
            O_Tutorial.mouse_type = O_Tutorial.in_type;
            O_Tutorial.input_num = 0;
            O_Tutorial.in_type = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (global.debug)
{
    draw_set_color(c_red);
    draw_text(x - 26, y - 26, 
        "S: " + "Input" +
        "#T: " + string(O_Tutorial.in_type) +
        "#N: " + string(O_Tutorial.input_num));
    draw_set_color(c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Planet_Water</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>O_Planet_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
inner_radius = 2000; // 1500
outer_radius = 7000; // 8000
min_create = 100; // 100
max_create = 150; // 150
mass = mass_Moon;
num_asteroids = 0;
num_comets = 0;
/*if (instance_exists(O_Planet_BlackHole))
{
    Sc_OrbitalVelocity(self, O_Planet_BlackHole);
}*/
// Create Asteroids
num_asteroids = round(random_range(min_create, max_create));
for (i = 0; i &lt; num_asteroids; i += 1)
{
    //alarm[0] = 0.1*room_speed;
    dist = sprite_width/2 + random_range(inner_radius, outer_radius);
    dir = random(360);
    // Repeat until there is no overlap when the Asteroid is created
    while (collision_circle(x+lengthdir_x(dist, dir), y+lengthdir_y(dist, dir), sprite_get_width(Sp_Asteroid), O_Asteroid_Parent, true, true) != noone)
    {
        dist = sprite_width/2 + random_range(inner_radius, outer_radius);
        dir = random(360);
    }
    global.Asteroids[i] = instance_create(x+lengthdir_x(dist, dir), y+lengthdir_y(dist, dir), O_Asteroid);
    global.Asteroids[i].num = i;
}
// Create Comets
num_comets = round(random_range(min_create/5,max_create/5));
for (i=0; i &lt; num_comets; i += 1)
{
    dist = sprite_width/2 + random_range(inner_radius, outer_radius);
    dir = random(360);
    // Repeat until there is no overlap when the Comet is created
    while (collision_circle(x+lengthdir_x(dist, dir), y+lengthdir_y(dist, dir), sprite_get_width(Sp_Asteroid), O_Asteroid_Parent, true, true) != noone)
    {
        dist = sprite_width/2 + random_range(inner_radius, outer_radius);
        dir = random(360);
    }
    global.Comets[i] = instance_create(x+lengthdir_x(dist, dir), y+lengthdir_y(dist, dir), O_Comet);
    global.Comets[i].num = i;
}
event_inherited();

// Setup Player orbital velocity

angle_object = point_direction(x, y, O_Ship.x, O_Ship.y);
//for (i = 0; i &lt; num_asteroids; i += 1)
//{
    with(O_Asteroid)
    {
        motion_add(other.angle_object + 90, other.ship_orbitalV);
    }
//}
//for (i = 0; i &lt; num_comets; i += 1)
//{
    with(O_Comet)
    {
        motion_add(other.angle_object + 90, other.ship_orbitalV);
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
// Player gravity
if(instance_exists(O_Ship))
{
    angle_object = point_direction(x, y, O_Ship.x, O_Ship.y);
    with(O_Asteroid)
    {
        motion_add(other.angle_object, other.ship_gravity);
    }
    with(O_Comet)
    {
        motion_add(other.angle_object, other.ship_gravity);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

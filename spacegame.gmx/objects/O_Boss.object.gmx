<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_BossMaster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnCoolDown = false
Angle = 0
CloseShip = true
AccelValue = 0
start = 0
ShootCount = 0
AccelCount = 0
MoveCount = 0
StartMove = 0
MovingStandard = false
Image = 0
SignStart = 0
SlowDown = 0
StopShoot = 0
DirectionCount = 0
Far = false
AccelDone  = 0
AccelCountDone = 0
Firing = false
ShootAnimCount = 0
StartShoot = 0
Missile1Shot = 0
Missile2Shot = 0
Missile3Shot = 0
Invul = 0
Dead = false
DeathCount = 0
DeathStart = 0
Health = 1/10*score
TurnAngle = 0
TurnStart = 0
TurnDone = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(O_Ship){
    Angle = direction - 90
    if Dead = false{
    //Sprite Code
    if ShootCount &gt;= 4 and ShootCount &lt;= 6{
        ShootAnimCount += 1/room_speed
        if StartShoot = 0{
            Firing = true
            Image = 9
            StartShoot = 1}
        if ShootAnimCount &gt;= 0.2{
            Image += 1
            ShootAnimCount = 0}
        if Image &gt; 13{
            Firing = false
            MoveStandard = true
            Missile1Shot = 0
            Missile2Shot = 0
            Missile3Shot = 0}
        }
        
    if MovingStandard = true and Firing = false{
        if StartMove = 0{
            Image = 1
            StartMove = 1}
        MoveCount += 1/room_speed
        if MoveCount &gt;= 0.4{
            Image += 1 
            MoveCount = 0            
            }
        if Image &gt;= 3{Image = 1}
    }
        else{
            if MovingStandard = false{
                Image = 0
                StartMove = 0}
            }
        //End Sprite Code
    //Movement Code
    AccelCount -= 1/room_speed
    ShootCount -= 1/room_speed
    Invul -= 1/room_speed
    DistanceShip = point_distance(x,y,O_Ship.x,O_Ship.y)
    DirectionShip = point_direction(x,y,O_Ship.x,O_Ship.y)
        //Move Towards Player
        if DistanceShip &gt;= 900 {
            Far = true 
        } 
        if Far = true and OnCoolDown = false and AccelCount &lt;= 0{
            if TurnDone = false{
                AccelCountDone = 0
                MovingStandard = true
                if TurnStart = 0{
                    TurnAngle = Angle+90
                    TurnStart = 1}
                    AccelValue = 2
                if sign(TurnAngle-DirectionShip) &lt; 0{
                    TurnAngle += 2}
                if sign(TurnAngle-DirectionShip) &gt; 0{
                    TurnAngle -= 2}
                hspeed = lengthdir_x(AccelValue,TurnAngle)
                vspeed = lengthdir_y(AccelValue,TurnAngle)
                if TurnAngle &lt;= DirectionShip+15 and TurnAngle &gt;= DirectionShip-15 {
                    TurnDone = true}
            }
            if TurnDone = true{
                CloseShip = false
                MovingStandard = true
                AccelValue += 0.1
                if AccelValue &gt;= 3{AccelValue = 3}
                hspeed = lengthdir_x(AccelValue,DirectionShip)
                vspeed = lengthdir_y(AccelValue,DirectionShip)
            }
            
        }
        //Slow down when close to player
        if DistanceShip &lt; 920 and OnCoolDown = false and Far = true{
            MovingStandard = false
            AccelValue -= 0.2
            if AccelCountDone = 0{
                AccelCount = 2
                AccelCountDone = 1}
            if AccelValue &lt; 0{AccelValue = 0}
            hspeed = lengthdir_x(AccelValue,DirectionShip)
            vspeed = lengthdir_y(AccelValue,DirectionShip)
            if AccelCount &lt;= 1.5 and AccelDone  = 0{
                CloseShip = true
                AccelDone = 1}
        }
        //Flanking Code  
        if CloseShip = true { 
                Far = false
                TurnDone = false
                if ShootCount &lt;= 0{ShootCount = 11}
                if SignStart = 0{
                    OnCoolDown = true
                  Sign = -90
                  FlankPointx = O_Ship.x
                  FlankPointy = O_Ship.y
                  SignStart = 1}
            if ShootCount &lt;= 9{
                DirectionToFlank = point_direction(x,y,FlankPointx,FlankPointy)
                MovingStandard = true
                StopShoot = 0
                AccelValue += 0.1
                if AccelValue &gt;= 5{AccelValue = 5}
                hspeed = lengthdir_x(AccelValue,DirectionToFlank+ Sign)
                vspeed = lengthdir_y(AccelValue,DirectionToFlank+ Sign)
                }
            }
        if ShootCount &gt;= 2 and ShootCount &lt;=3 {
            CloseShip = false
            DirectionToFlank = point_direction(x,y,FlankPointx,FlankPointy)
            AccelDone = 0
            MovingStandard = false
            AccelValue -= 0.15
            if AccelValue &lt; 0{AccelValue = 0}
            hspeed = lengthdir_x(AccelValue,DirectionToFlank+ Sign)
            vspeed = lengthdir_y(AccelValue,DirectionToFlank+ Sign)
            SignStart = 0
        }
        if ShootCount &lt; 1 and ShootCount &gt; 0{
            if StopShoot = 0{
                StartShoot = 0
                OnCoolDown = false
                ShootCount = 0
                StopShoot = 1
                if Far = false {CloseShip = true}
            }
        }
        //Missile Firing Code
        if Image = 9{
            if Missile1Shot = 0{
                //sound_play(A_BossShoot)
                Missile1 = instance_create(x,y, O_BossMissile)
                Missile1.direction = direction+90
                Missile1.speed = 8
                Missile1.Angle = Angle+90
                Missile1.Sign = 90
                Missile1Shot = 1}
        }
        if Image = 11{
            MissileOffsetx = lengthdir_x(25,Angle+90)
            MissileOffsety = lengthdir_y(25,Angle+90)
            if Missile2Shot = 0{
                //sound_play(A_BossShoot)
                Missile2 = instance_create(x+MissileOffsetx,y+MissileOffsety,O_BossMissile)
                Missile2.direction = direction+90
                Missile2.speed = 12
                Missile2.Sign = -90
                Missile2.Angle = Angle+90
                Missile2Shot = 1}
            if Missile3Shot = 0{
                Missile3 = instance_create(x-MissileOffsetx,y-MissileOffsety,O_BossMissile)
                Missile3.direction = direction+90
                Missile3.speed = 12
                Missile3.Angle = Angle+90
                Missile3.Sign = 90
                Missile3Shot = 1}
        }
}
    if Health &lt;= 0{
        Dead = true
        speed = 0
        DeathCount += 1/(room_speed/2)
        if DeathStart = 0{
            Image = 14
            DeathStart = 1
        }
        if DeathCount &gt;= 0.5{
            Image += 1
            DeathCount = 0}
        if Image &gt; 18{
            DebrisAngle = Angle + 90
            OffestX = lengthdir_x(70,DebrisAngle)
            OffestY = lengthdir_y(70,DebrisAngle)
            Bottom = instance_create(x-OffestX,y-OffestY,O_BossBottom)
            Bottom.speed = 0.5
            Bottom.direction = DebrisAngle-180
            Bottom.image_angle = Angle
            Top = instance_create(x+OffestX,y+OffestY,O_BossTop)
            Top.image_angle = Angle
            Top.speed = 0.5
            Top.direction = DebrisAngle
            score += boss_alien_points
            nearest_planet = instance_nearest(x, y, O_Planet_Parent)
            nearest_planet.boss_spawn_score += score + 500;
            nearest_planet.boss_spawned = false;
            instance_destroy()}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Invul &lt;= 0)
{
    Health -= other.damage;
    Invul = 0.5
}
with(other)
{
    effect_create_above(ef_smoke, x, y, 1, c_gray);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &gt; view_xview[0] - sprite_width &amp;&amp; x &lt; view_xview[0] + view_wview[0] + sprite_width &amp;&amp; y &gt; view_yview[0] - sprite_width &amp;&amp; y &lt; view_yview[0] + view_hview[0] + sprite_width)
{
    draw_sprite_ext(Sp_BossMaster,Image,x,y,1,1,Angle,c_white,1);
}
if (global.debug)
{
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_red);
    draw_text(x, y, "Health: " + string(Health));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

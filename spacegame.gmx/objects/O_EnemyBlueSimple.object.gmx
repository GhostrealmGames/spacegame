<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Enemy2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>AccelerationValue = 0
Direction = 0
AccelCount = 0
Shotget = 0
HasShot= 0
ShootCount = 1
damage = 0;
max_damage = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(O_Ship){    
AccelCount -= 1/room_speed
    if point_distance(x,y,O_Ship.x,O_Ship.y) &lt; room_width/6{
    //Fly to player until close enough
        if point_distance(x,y,O_Ship.x,O_Ship.y) &gt; 300{
            if AccelCount &lt;= 0{
                Shotget = 0
                HasShot = 0
                ShootCount = 1
                AccelerationValue += 0.1
                if AccelerationValue &gt;= 5{AccelerationValue = 5}
                Direction = point_direction(x,y,O_Ship.x,O_Ship.y)
                hspeed = lengthdir_x(AccelerationValue,Direction)
                vspeed = lengthdir_y(AccelerationValue,Direction)
                }
            }
            if point_distance(x,y,O_Ship.x,O_Ship.y) &lt;= 320{
                AccelerationValue -= 0.4
                AccelCount = 2
                    if AccelerationValue &lt;= 0{AccelerationValue = 0}
                Direction = point_direction(x,y,O_Ship.x,O_Ship.y)
                hspeed = lengthdir_x(AccelerationValue,Direction)
                vspeed = lengthdir_y(AccelerationValue,Direction)
                }
    
    
    }
    else {
    AccelerationValue -= 0.2
                    if AccelerationValue &lt;= 0{AccelerationValue = 0}
                hspeed = lengthdir_x(AccelerationValue,Direction)
                vspeed = lengthdir_y(AccelerationValue,Direction)}
    
} //Shooting Code
if (instance_exists(O_Ship))
{
    if AccelCount &gt; 0 {
    ShootCount -= 1/room_speed
        if Shotget = 0 and ShootCount &lt;= 0.5{
        ShootSpotx = O_Ship.x
        ShootSpoty = O_Ship.y
        ShotDirection = point_direction(x,y,ShootSpotx,ShootSpoty)
        Shotget = 1}
        if ShootCount &lt;= 0 and HasShot = 0{
            Shot = instance_create(x,y,O_Enemies_Laser) //Make a projectile
            Shot.image_angle = ShotDirection
            Shot.hspeed = lengthdir_x(40,ShotDirection)
            Shot.vspeed = lengthdir_y(40,ShotDirection)
            HasShot = 1
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damage += other.damage;
if (damage &gt;= max_damage)
{
    instance_destroy();
    instance_create(x, y, O_Explosion);
    score += small_alien_points;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &gt; view_xview[0] - sprite_width &amp;&amp; x &lt; view_xview[0] + view_wview[0] + sprite_width &amp;&amp; y &gt; view_yview[0] - sprite_width &amp;&amp; y &lt; view_yview[0] + view_hview[0] + sprite_width)
{
    draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, Direction, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_fps = false;
fps_slow = floor(fps_real);
map_size = 20000;
zoom_rate = 1000;
zout_max = 500000;
zin_min = 10000;
alarm[0] = 0.25 * room_speed;

// Create phone buttons if on a phone
Sc_Phone_Button_Create();

// Create Border
rnum = 0;
// Create Ship
instance_create(1920/2, 1080/2, O_Ship); // creates a ship in the center of the screen
// Create Planets
inner_radius = 2000;
outer_radius = 7000;
dist = sprite_get_width(O_Planet_Water)/2 + random_range(inner_radius, outer_radius);
dir = random(360);
instance_create(1920/2+lengthdir_x(dist, dir), 1080/2+lengthdir_y(dist, dir), O_Planet_Water);
// Create Star
//instance_create(10000, 10000, O_Star_Sun);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fps_slow = floor(fps_real);
alarm[0] = 0.25 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(map_size &gt; zin_min)
{
    map_size -= zoom_rate;
}
else
{
    map_size = zin_min;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(map_size &lt; zout_max)
{
    map_size += zoom_rate;
}
else
{
    map_size = zout_max;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = global.controller;
if (controller.mouse_slot &gt; 0)
{
    switch(controller.mouse_type)
    {
        case collector_droid + 2*total_resource_types:
            instance_create(mouse_x + 16, mouse_y + 16, O_Droid_Collector);
            controller.mouse_slot -= 1;
            break;
        case miner_droid + 2*total_resource_types:
            instance_create(mouse_x + 16, mouse_y + 16, O_Droid_Miner);
            controller.mouse_slot -= 1;
            break;
        case smelter_droid + 2*total_resource_types:
            instance_create(mouse_x + 16, mouse_y + 16, O_Droid_Smelter);
            controller.mouse_slot -= 1;
            break;
    }
}
if (controller.mouse_slot &lt;= 0)
{
    controller.mouse_type = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = global.controller;
if (global.newgame)
{
    // Ship
    controller.fuel = 100;
    controller.ship_health = 100;
    controller.ship_upgrade = 1;
    // Mouse
    controller.mouse_slot = 0;
    controller.mouse_type = -1;
    controller.mouse_pickup = false;
    // Inventory
    controller.Slots[0] = 0;
    controller.Inventory[2*total_resource_types + craftable_items] = 0;
    controller.Inv_Draw[2*total_resource_types + craftable_items] = 0;
    for(i = 0; i &lt; 2*total_resource_types + craftable_items - 1; i+=1)
    {
        controller.Inventory[i] = 0;
        controller.Inv_Draw[i] = 0;
    }
    // Smelting
    controller.smelt_num = 0;
    controller.smelt_type = -1;
    controller.smelting = false;
    controller.input_num = 0;
    controller.in_type = -1;
    controller.processed_time = 0;
    global.newgame = false;
    room_persistent = false;
    room_restart();
    room_goto(R_Newgame);
}
else
{
    room_persistent = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sc_HUD(view_xview[0], view_yview[0], O_Controller);
draw_set_color(c_red);
draw_set_halign(fa_right);
draw_set_valign(fa_top);
if (draw_fps)
{
    draw_text(view_xview[0] + view_wview[0] - 10, view_yview[0], 
        "FPS: " + string(fps_slow) + 
        "#Score: " + string(score) +
        "#Spawn Rate: " + string(((-1/100)*score+initial_spawn_rate))
        );
}
if (global.debug)
{
    draw_set_color(c_red);
    draw_text(mouse_x - 32, mouse_y - 32, string(controller.mouse_type));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (draw_fps)
{
    draw_fps = false;
}
else
{
    draw_fps = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
